/*
Copyright 2019 OpenFaaS Authors

Licensed under the MIT license. See LICENSE file in the project root for full license information.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha2

import (
	v1alpha2 "github.com/openfaas-incubator/ingress-operator/pkg/apis/openfaas/v1alpha2"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// FunctionIngressLister helps list FunctionIngresses.
// All objects returned here must be treated as read-only.
type FunctionIngressLister interface {
	// List lists all FunctionIngresses in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha2.FunctionIngress, err error)
	// FunctionIngresses returns an object that can list and get FunctionIngresses.
	FunctionIngresses(namespace string) FunctionIngressNamespaceLister
	FunctionIngressListerExpansion
}

// functionIngressLister implements the FunctionIngressLister interface.
type functionIngressLister struct {
	indexer cache.Indexer
}

// NewFunctionIngressLister returns a new FunctionIngressLister.
func NewFunctionIngressLister(indexer cache.Indexer) FunctionIngressLister {
	return &functionIngressLister{indexer: indexer}
}

// List lists all FunctionIngresses in the indexer.
func (s *functionIngressLister) List(selector labels.Selector) (ret []*v1alpha2.FunctionIngress, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha2.FunctionIngress))
	})
	return ret, err
}

// FunctionIngresses returns an object that can list and get FunctionIngresses.
func (s *functionIngressLister) FunctionIngresses(namespace string) FunctionIngressNamespaceLister {
	return functionIngressNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// FunctionIngressNamespaceLister helps list and get FunctionIngresses.
// All objects returned here must be treated as read-only.
type FunctionIngressNamespaceLister interface {
	// List lists all FunctionIngresses in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha2.FunctionIngress, err error)
	// Get retrieves the FunctionIngress from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha2.FunctionIngress, error)
	FunctionIngressNamespaceListerExpansion
}

// functionIngressNamespaceLister implements the FunctionIngressNamespaceLister
// interface.
type functionIngressNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all FunctionIngresses in the indexer for a given namespace.
func (s functionIngressNamespaceLister) List(selector labels.Selector) (ret []*v1alpha2.FunctionIngress, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha2.FunctionIngress))
	})
	return ret, err
}

// Get retrieves the FunctionIngress from the indexer for a given namespace and name.
func (s functionIngressNamespaceLister) Get(name string) (*v1alpha2.FunctionIngress, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha2.Resource("functioningress"), name)
	}
	return obj.(*v1alpha2.FunctionIngress), nil
}
