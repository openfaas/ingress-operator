/*
Copyright 2023 OpenFaaS Author(s)

Licensed under the MIT license. See LICENSE file in the project root for full license information.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// FunctionIngressTLSApplyConfiguration represents an declarative configuration of the FunctionIngressTLS type for use
// with apply.
type FunctionIngressTLSApplyConfiguration struct {
	Enabled   *bool                              `json:"enabled,omitempty"`
	IssuerRef *ObjectReferenceApplyConfiguration `json:"issuerRef,omitempty"`
}

// FunctionIngressTLSApplyConfiguration constructs an declarative configuration of the FunctionIngressTLS type for use with
// apply.
func FunctionIngressTLS() *FunctionIngressTLSApplyConfiguration {
	return &FunctionIngressTLSApplyConfiguration{}
}

// WithEnabled sets the Enabled field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Enabled field is set to the value of the last call.
func (b *FunctionIngressTLSApplyConfiguration) WithEnabled(value bool) *FunctionIngressTLSApplyConfiguration {
	b.Enabled = &value
	return b
}

// WithIssuerRef sets the IssuerRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IssuerRef field is set to the value of the last call.
func (b *FunctionIngressTLSApplyConfiguration) WithIssuerRef(value *ObjectReferenceApplyConfiguration) *FunctionIngressTLSApplyConfiguration {
	b.IssuerRef = value
	return b
}
